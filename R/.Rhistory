theme(axis.title.x = element_text(vjust=2))+
scale_color_discrete(name="Species",
labels = c("Hand", "Forceps","Fork","Knife","Spoon"))
ggplot(data2,aes(PredationRound,value,color=variable))+
geom_line(linetype="longdash")+
xlim(1,6.5)+
ylim(0,4)+
labs(x="Round", y="Number of predators",fill="Species")+
scale_x_discrete(breaks=c("1","2","3","4","5","6"))+
theme(axis.title.x = element_text(vjust=2))+
scale_color_discrete(name="Species",
labels = c("Hand", "Forceps","Fork","Knife","Spoon"))
ggplot(data2,aes(PredationRound,value,color=variable))+
geom_line(linetype="longdash")+
xlim(1,6.5)+
ylim(0,4)+
labs(x="Round", y="Number of predators",fill="Species")+
scale_x_discrete(breaks=c("1","2","3","4","5","6"),
labels=c("1","2","3","4","5","6"))+
theme(axis.title.x = element_text(vjust=2))+
scale_color_discrete(name="Species",
labels = c("Hand", "Forceps","Fork","Knife","Spoon"))
ggplot(data2,aes(PredationRound,value,color=variable))+
geom_line(linetype="longdash")+
xlim(1,6.5)+
ylim(0,4)+
labs(x="Round", y="Number of predators",fill="Species")+
scale_x_discrete(limits=c("1","2","3","4","5","6"),
labels=c("1","2","3","4","5","6"))+
theme(axis.title.x = element_text(vjust=2))+
scale_color_discrete(name="Species",
labels = c("Hand", "Forceps","Fork","Knife","Spoon"))
data$Treat2 <- factor(data$Treat2,levels = c("PR", "EP", "LR"))
data <- read.csv("C:/Users/Angela/Desktop/Experimental fish - Copy.csv")
library(ggplot2)
library(ggpubr)
library(ggplot2)
data$Treat2 <- factor(data$Treat2,levels = c("PR", "EP", "LR"))
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) +
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic()+ylim(39.5, 41)+theme(aspect.ratio=1)
d<-ggerrorplot(data,x="Treatment",y="CTmax",
desc_stat="mean_se",
error.plot="errorbar",
add="mean"
)
data$Treatment <- factor(data$Treatment,levels = c("PR", "EP", "LR"))
p <- ggplot(data, aes(x=Treatment, y=CTmax)) + stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(width=0.4)+ geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+labs(y="CTmax (ºC)", x = "Reproductive Stage ")+theme_classic()+ylim(39.6, 41.9)+theme(aspect.ratio=1)
p
a <- ggplot(data, aes(x=Treatment, y=CTmax)) +
geom_boxplot(width=0.4)+ geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+labs(y="CTmax (ºC)", x = "Reproductive Stage ")+theme_classic()+ylim(39.6, 41.9)+theme(aspect.ratio=1)
#internet
attach(data)
MinMeanSEMMax <- function(CTmax) {
v <- c(min(CTmax), mean(CTmax) - sd(CTmax)/sqrt(length(CTmax)), mean(CTmax), mean(CTmax) + sd(CTmax)/sqrt(length(CTmax)), max(CTmax))
names(v) <- c("ymin", "lower", "middle", "upper", "ymax")
v
}
a <- ggplot(data, aes(x=Treatment, y=CTmax)) +
stat_summary(fun.data=MinMeanSEMMax, geom="boxplot") +
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+labs(y="CTmax (ºC)", x = "Reproductive Stage ")+theme_classic()+ylim(39.6, 41.9)+theme(aspect.ratio=1)
a
attach(data)
MeanSEM <- function(CTmax) {
v <- c(mean(CTmax) - sd(CTmax)/sqrt(length(CTmax)), mean(CTmax), mean(CTmax) + sd(CTmax)/sqrt(length(CTmax)))
names(v) <- c("lower", "middle", "upper")
v
}
b <- ggplot(data, aes(x=Treatment, y=CTmax)) +
stat_summary(fun.data=MeanSEM, geom="boxplot") +
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+labs(y="CTmax (ºC)", x = "Reproductive Stage ")+theme_classic()+ylim(39.6, 41.9)+theme(aspect.ratio=1)
b
c <- ggplot(data, aes(x=Treatment, y=CTmax)) +
geom_dotplot(binaxis='y',stackdir='center')
c+stat_summary(fun.data=MeanSEM,fun.args = list(mult=1),
geom="errorbar",color="red",width=0.1)+
geom_errorbar(aes(ymin="lower",ymax="upper",color="black",width="0.1"))
install.packages("ggpubr")
library(ggpubr)
library(ggplot2)
d<-ggerrorplot(data,x="Treatment",y="CTmax",
desc_stat="mean_se",
error.plot="errorbar",
add="mean"
)
e<-ggplot(data, aes(x=Treatment, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=2) +
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+labs(y="CTmax (ºC)", x = "Reproductive Stage ")+theme_classic()+ylim(39.5, 41)+theme(aspect.ratio=1)
e
data$Treat2 <- factor(data$Treat2,levels = c("PR", "EP", "LR"))
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) +
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic()+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.9) +
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic()+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) +
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 22)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) +
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 16)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) +
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 12)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) +
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 14)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) +
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) + geom_point(alpha = .4)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
data$Treat2 <- factor(data$Treat2,levels = c("PR", "EP", "LR"))
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) + geom_point(alpha = .2)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) + geom_point(alpha = .2, color)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_bw(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) + geom_point(alpha = .2, color=black)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
data$Treat2 <- factor(data$Treat2,levels = c("PR", "EP", "LR"))
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) + geom_point(alpha = .1)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) + geom_point(alpha = .1)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) + geom_point(alpha = .1)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) + geom_point(alpha = .1)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1.5)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(stat="summary", fun.y="mean", size=3.2) + geom_point(alpha = .1)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax)) + geom_point(alpha = .1)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax, color="black")) + geom_point(stat="summary", fun.y="mean", size=3.2) + geom_point(alpha = .1)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax, color=BLACK)) + geom_point(stat="summary", fun.y="mean", size=3.2) + geom_point(alpha = .1)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
f<-ggplot(data, aes(x=Treat2, y=CTmax, color=='black')) + geom_point(stat="summary", fun.y="mean", size=3.2) + geom_point(alpha = .1)+
geom_errorbar(stat="summary", fun.data="mean_se", fun.args = list(mult = 1.96),width=0.1)+
geom_segment(x=.5025, xend=0.5025, y=0, yend=1.002)+xlab("\nReproductive Stage")+ylab("CTmax (ºC)\n")+theme_classic(base_size = 15)+ylim(39.5, 41)+theme(aspect.ratio=1)
f
data <- read.csv("C:/Users/Angela/Desktop/Experimental fish - Copy.csv")
data
View(data)
q()
install.packages("tidyselect")
install.packages("tidyselect")
library(ggpubr)
ggarrange(s_all,l_all,ld_all,s_reg,l_reg,ld_reg + rremove("x.text"),
labels = c("A","B","C"),
ncol = 3, nrow = 2)
library(ggpubr)
library(ggpubr)
ggarrange(s_all,l_all,ld_all,s_reg,l_reg,ld_reg + rremove("x.text"),
labels = c("A","B","C"),
ncol = 3, nrow = 2)
install.packages("tidyselect")
install.packages("tidyselect")
library(ggpubr)
###Combine plots
install.packages("ggpubr")
library(ggpubr)
library(ggpubr)
load(file="../Data/all_lists.rda")
library(dplyr)
library(tidyr)
library(bipartite)
library(NetIndices)
###Calculate complexity parameters (S, L, LD, Co)
s_all<-lapply(g_all,vcount)
l_all<-lapply(g_all,ecount)
ld_all<-lapply(g_all, function(x) {
ld<-round(ecount(x)/vcount(x),3)
})
co_all<-lapply(g_all, function(x) {
ld<-round(ecount(x)/vcount(x)^2,3)
})
####Load Data ----
complexity<-data.frame(cbind(s_all,l_all,ld_all,co_all))
colnames(complexity)<-c("Especies","Interacciones","Densidad","Conectividad")
complexity<-complexity %>%
mutate(Region=c("Subtropical","Templado","Polar","Templado","Templado","Subtropical",
"Templado","Templado","Templado","Templado","Tropical","Tropical",
"Tropical","Tropical","Templado","Templado","Templado","Templado",
"Subtropical","Templado","Tropical","Polar","Subpolar","Polar","Polar",
"Polar","Polar")) %>%
mutate(across(!Region, as.numeric))
rownames(complexity)<-c("Angola","Baltic","BarentsArctic","BarentsBoreal",
"Benguela","Brazil","Cadiz","Cayman","Celtic","Chile","Cuba",
"Florida","Jamaica","LaGuajira","Lion","Monterey","NEUS","Pacific",
"Peru","Simon","Tortuga","Alaska","Beagle","Potter","SanakIntertidal","SanakNearshore",
"Weddell")
load(file="../Data/all_lists.rda")
getwd()
load(file="../Data/all_lists.rda")
library(dplyr)
library(tidyr)
library(bipartite)
library(NetIndices)
library(igraph)
library(multiweb)
library(sna)
load(file="../Data/.all_lists.rda")
load(file="../Data/.all_lists.rda")
load(file="../Data/.all_lists.rda")
setwd("C://Users/Angela/OneDrive/Desktop/ISP/R")
load(file="../Data/.all_lists.rda")
library(igraph)
s_all<-lapply(g_all,vcount)
l_all<-lapply(g_all,ecount)
ld_all<-lapply(g_all, function(x) {
ld<-round(ecount(x)/vcount(x),3)
})
co_all<-lapply(g_all, function(x) {
ld<-round(ecount(x)/vcount(x)^2,3)
})
###Bind complexity properties in a data frame and add region
complexity<-data.frame(cbind(s_all,l_all,ld_all,co_all))
colnames(complexity)<-c("Especies","Interacciones","Densidad","Conectividad")
View(g_all)
###Bind complexity properties in a data frame and add region
complexity<-data.frame(cbind(s_all,l_all,ld_all,co_all))
colnames(complexity)<-c("Especies","Interacciones","Densidad","Conectividad")
complexity<-complexity %>%
mutate(Region=c("Polar","Subtropical","Templado","Polar","Templado","Subpolar","Templado",
"Subtropical","Templado","Templado","Templado","Templado","Tropical","Tropical",
"Tropical","Subpolar","Tropical","Tropical","Templado","Templado","Templado",
"Subtropical","Polar","Polar","Polar","Templado","Tropical","Polar")) %>%
mutate(across(!Region, as.numeric))
###Bind complexity properties in a data frame and add region
library(dplyr)
complexity<-data.frame(cbind(s_all,l_all,ld_all,co_all))
colnames(complexity)<-c("Especies","Interacciones","Densidad","Conectividad")
complexity<-complexity %>%
mutate(Region=c("Polar","Subtropical","Templado","Polar","Templado","Subpolar","Templado",
"Subtropical","Templado","Templado","Templado","Templado","Tropical","Tropical",
"Tropical","Subpolar","Tropical","Tropical","Templado","Templado","Templado",
"Subtropical","Polar","Polar","Polar","Templado","Tropical","Polar")) %>%
mutate(across(!Region, as.numeric))
View(complexity)
View(m_list)
View(s_all)
save(g_all,file="../Data/.all_igraph.rda")
load(file="../Data/.all_igraph.rda")
complexity$Location<-name(complexity)
complexity$Location<-rowname(complexity)
complexity$Location<-rownames(complexity)
## Modularity
# Get largest connected component
compo <- lapply(g_all, function(x){
components <- igraph::clusters(x, mode="weak")
biggest_cluster_id <- which.max(components$csize)
vert_ids <- V(x)[components$membership == biggest_cluster_id]
g_largest <- igraph::induced_subgraph(x, vert_ids)
})
# Calculate modularity
mod_all <- lapply(compo, function(x){
modulos <- cluster_spinglass(x)
mti <- tibble(Name=names(modulos), Groups=length(modulos$csize), Modularity=modulos$modularity)
})
mod_all_df <- bind_rows(mod_all, .id = "Location")
View(mod_all_df)
View(mod_all)
# Calculate modularity
mod_all <- lapply(compo, function(x){
modulos <- cluster_spinglass(x)
mti <- tibble(Name=names(modulos), Groups=length(modulos$csize), Modularity=modulos$modularity)
bind_rows(mti, .id = "Location")
})
View(mod_all)
View(mod_all_df)
groups<-aggregate(mod_all_df$Groups,list(mod_all_df$Location), FUN=mean)
rownames(groups)<-groups$Group.1
colnames(groups)<- c("Location","Modules")
View(groups)
groups1<-aggregate(mod_all_df$Modularity,list(mod_all_df$Location), FUN=mean)
rownames(groups1)<-groups1$Group.1
colnames(groups1)<- c("Location","Modularity")
View(groups1)
topo_all<-lapply(g_all,function(x) {
topo<-calc_topological_indices(x)
})
library(multiweb)
topo_all<-lapply(g_all,function(x) {
topo<-calc_topological_indices(x)
})
topo_all<-lapply(g_all,function(x) {
topo<-calc_topological_indices(x)
df<-bind_rows(topo)
})
View(topo_all)
topo_all<-lapply(g_all,function(x) {
topo<-calc_topological_indices(x)
df<-bind_rows(topo_all)
})
View(topo_all)
topo_all_df<-bind_rows(topo_all)
View(topo_all_df)
rownames(topo_all_df)<-names(g_all)
rownames(topo_all_df)<-complexity$Location
topo_all_df<-bind_rows(topo_all)
topo_all<-lapply(g_all,function(x) {
topo<-calc_topological_indices(x)
})
topo_all_df<-bind_rows(topo_all)
rownames(topo_all_df)<-names(g_all)
structure2<-cbind(structure1,groups1)
View(groups1)
View(groups)
structure<-cbind(topo_all_df$Omnivory,topo_all_df$TLmean,topo_all_df$PathLength,
groups$Modules, groups1$Modularity)
View(structure)
structure<-round(cbind(topo_all_df$Omnivory,topo_all_df$TLmean,topo_all_df$PathLength,
groups$Modules, groups1$Modularity),3)
colnames(structure)<-c('Omnivory','TLmean','PathLength','Modularity','Modules')
structure$Conectividad <- complexity$Conectividad
structure<-round(cbind(topo_all_df$Omnivory,topo_all_df$TLmean,topo_all_df$PathLength,
groups$Modules, groups1$Modularity),3)
colnames(structure)<-c('Omnivory','TLmean','PathLength','Modularity','Modules')
View(complexity)
structure$Region <- complexity$Region
structure<-round(cbind(topo_all_df$Omnivory,topo_all_df$TLmean,topo_all_df$PathLength,
groups$Modules, groups1$Modularity),3)
colnames(structure)<-c('Omnivory','TLmean','PathLength','Modularity','Modules')
class(structure)
structure<-data.frame(structure)
structure$Conectividad <- complexity$Conectividad
structure$Region <- complexity$Region
structure<-round(cbind(topo_all_df$Omnivory,topo_all_df$TLmean,topo_all_df$PathLength,
groups$Modules, groups1$Modularity),3)
colnames(structure)<-c('Omnivory','TLmean','PathLength','Modularity','Modules')
structure<-data.frame(structure)
structure$Conectividad <- complexity$Conectividad
structure$Region <- complexity$Region
structure<-round(cbind(topo_all_df$Omnivory,topo_all_df$TLmean,topo_all_df$PathLength,
groups$Modules, groups1$Modularity),3)
colnames(structure)<-c('Omnivory','TLmean','PathLength','Modularity','Modules')
structure<-data.frame(structure)
structure$Conectividad <- complexity$Conectividad
structure$Region <- complexity$Region
View(complexity)
structure$Location <- complexity$Location
troph_all <- lapply(g_all, function(x){
m <- get.adjacency(x, sparse=FALSE)
tl <- TrophInd(m)
})
troph_all_df <- bind_rows(troph_all, .id = "Location")
View(troph_all_df)
deg_all_df <- deg_all %>%
unlist(recursive=FALSE) %>%
enframe() %>%
extract(name, into = c("Location", "Species"), "^([^.]+)\\.(.*)") %>%
rename(Degree = value)
library(tidyr)
deg_all_df <- deg_all %>%
unlist(recursive=FALSE) %>%
enframe() %>%
extract(name, into = c("Location", "Species"), "^([^.]+)\\.(.*)") %>%
rename(Degree = value)
library(tidyverse)
deg_all_df <- deg_all %>%
unlist(recursive=FALSE) %>%
enframe() %>%
extract(name, into = c("Location", "Species"), "^([^.]+)\\.(.*)") %>%
rename(Degree = value)
degree(g_all[["Potter"]])
degree(g_all)
deg_all <- lapply(g_all, function(x) {
deg <- degree(x)
})
View(deg_all)
deg_all_df <- deg_all %>%
unlist(recursive=FALSE) %>%
enframe() %>%
extract(name, into = c("Location", "Species"), "^([^.]+)\\.(.*)") %>%
rename(Degree = value)
View(deg_all_df)
deg_all_df$Region <- NA
for(i in 1:nrow(deg_all_df)) {
if (deg_all_df[i,"Location"] == "Angola") {
deg_all_df[i, "Region"]<- "Subtropical"
}
if (deg_all_df[i,"Location"] == "Baltic") {
deg_all_df[i, "Region"]<- "Templado"
}
if (deg_all_df[i,"Location"] == "BarentsArctic") {
deg_all_df[i, "Region"]<- "Polar"
}
if (deg_all_df[i,"Location"] == "BarentsBoreal") {
deg_all_df[i, "Region"]<- "Templado"
}
if (deg_all_df[i,"Location"] == "Benguela") {
deg_all_df[i, "Region"]<- "Templado"
}
if (deg_all_df[i,"Location"] == "Brazil") {
deg_all_df[i, "Region"]<- "Subtropical"
}
if (deg_all_df[i,"Location"] == "Cadiz") {
deg_all_df[i, "Region"]<- "Templado"
}
if (deg_all_df[i,"Location"] == "Cayman") {
deg_all_df[i, "Region"]<- "Templado"
}
if (deg_all_df[i,"Location"] == "Celtic") {
deg_all_df[i, "Region"]<- "Templado"
}
if (deg_all_df[i,"Location"] == "Chile") {
deg_all_df[i, "Region"]<- "Templado"
}
if (deg_all_df[i,"Location"] == "Cuba") {
deg_all_df[i, "Region"]<- "Tropical"
}
if (deg_all_df[i,"Location"] == "Florida") {
deg_all_df[i, "Region"]<- "Tropical"
}
if (deg_all_df[i,"Location"] == "Jamaica") {
deg_all_df[i, "Region"]<- "Tropical"
}
if (deg_all_df[i,"Location"] == "Kerguelen") {
deg_all_df[i, "Region"]<- "Subpolar"
}
if (deg_all_df[i,"Location"] == "LaGuajira") {
deg_all_df[i, "Region"]<- "Tropical"
}
if (deg_all_df[i,"Location"] == "Lion") {
deg_all_df[i, "Region"]<- "Templado"
}
if (deg_all_df[i,"Location"] == "Monterey") {
deg_all_df[i, "Region"]<- "Templado"
}
if (deg_all_df[i,"Location"] == "NEUS") {
deg_all_df[i, "Region"]<- "Templado"
}
if (deg_all_df[i,"Location"] == "Pacific") {
deg_all_df[i, "Region"]<- "Templado"
}
if (deg_all_df[i,"Location"] == "Peru") {
deg_all_df[i, "Region"]<- "Subtropical"
}
if (deg_all_df[i,"Location"] == "Simon") {
deg_all_df[i, "Region"]<- "Templado"
}
if (deg_all_df[i,"Location"] == "Tortuga") {
deg_all_df[i, "Region"]<- "Tropical"
}
if (deg_all_df[i,"Location"] == "Alaska") {
deg_all_df[i, "Conectividad"]<- "Polar"
}
if (deg_all_df[i,"Location"] == "Beagle") {
deg_all_df[i, "Region"]<- "Subpolar"
}
if (deg_all_df[i,"Location"] == "Potter") {
deg_all_df[i, "Region"]<- "Polar"
}
if (deg_all_df[i,"Location"] == "SanakIntertidal") {
deg_all_df[i, "Region"]<- "Polar"
}
if (deg_all_df[i,"Location"] == "SanakNearshore") {
deg_all_df[i, "Region"]<- "Polar"
}
if (deg_all_df[i,"Location"] == "Weddell") {
deg_all_df[i, "Region"]<- "Polar"
}
}
deg_all_df$Region <- NA
for(i in 1:nrow(deg_all_df)) {
if (deg_all_df[i,"Location"] == "Angola") {
deg_all_df[i, "Region"]<- "Subtropical"
}
View(deg_all)
View(deg_all)
deg_all_df <- deg_all %>%
unlist(recursive=FALSE) %>%
enframe() %>%
extract(name, into = c("Location", "Species"), "^([^.]+)\\.(.*)") %>%
rename(Degree = value)
deg_all <- lapply(g_all, function(x) {
deg <- degree(x)
})
